CGP React Viewer - TODO List

TODO FunkceTab

I. Core UI Structure & Basic Controls
    [X] Implement Tabbed Interface:
        [X] Create tabs: "Funkce" (Functions), "Informace" (Information), "Nastavení" (Settings).
        [X] Basic content areas for each tab.
        [X] Implement tab switching logic.
        [X] Implement foldable/collapsible tab content area.
    [X] Information Tab Content:
        [X] Display parsed config details (inputs, outputs, grid size, etc.).
        [X] Display count of defined nodes.
        [X] Display count of active nodes.
        [X] Display "Pocet bloku navic" (Number of extra/inactive blocks).
    [X] Error Display:
        [X] Show parsing errors prominently on the screen (not just console).

II. Visualization Enhancements & Settings ("Nastavení" Tab)
    [X] Calculate Active Nodes:
        [X] Implement logic to trace back from output nodes.
        [X] Store this information (e.g., a Set of active node indices in App.js state).
    [X] Toggle: "Zobrazovat číslo bloku" (Show block number/index):
        [X] Add checkbox in "Nastavení".
        [X] Add state variable (e.g., settings.showNodeIndices).
        [X] Conditionally render the node index label in Visualization (via Node component).
    [X] Toggle: "Skrýt nefunkční bloky" (Hide non-functional blocks):
        [X] Add checkbox in "Nastavení".
        [X] Add state variable (e.g., settings.hideInactiveNodes).
        [X] Modify Visualization component to conditionally render or skip inactive nodes based on this state and active node data.
    [X] Toggle: "Zobrazovat spoje skrytých bloku" (Show connections of hidden/inactive blocks):
        [X] Add checkbox in "Nastavení" (conditionally enabled).
        [X] Add state variable (e.g., settings.showConnectionsOfInactive).
        [X] Modify line drawing logic to hide/show lines connected to inactive nodes based on both hideInactiveNodes and showConnectionsOfInactive.
    [ ] Toggle: "Schematické značky" (Schematic Symbols):
        [ ] Add checkbox in "Nastavení".
        [ ] Add state variable (e.g., useSchematicSymbols).
        [ ] Create SVG components or path data for different logic gates (AND, OR, XOR, MUX, etc.).
        [ ] In Visualization (likely in Node component), conditionally render the schematic symbol instead of the generic rectangle based on nodeDef.funcId and the useSchematicSymbols state.
    [ ] Toggle: "Zobrazovat patičku" (Show footer):
        [ ] Add checkbox in "Nastavení".
        [ ] Add state (e.g., showFooter).
        [ ] Design and implement a footer area to display specific information.
    [ ] Display Modes (Radio Buttons): "Přímé", "Přímé 2", "Přímé + opt":
        [ ] Add radio buttons in "Nastavení".
        [ ] Add state for selected display mode.
        [ ] Define what each mode entails and implement the visual changes.

III. Node Layout & Persistence ("Funkce" Tab)
    [X] Drag and Drop Nodes (Basic Visuals - if implemented in current version):
        [X] Basic implementation for visually dragging nodes within Visualization.jsx.
        [X] Connections update visually during/after drag.
    [ ] Persist Dragged Node Positions:
        [ ] Lift nodePositions state (and draggedNode logic) from Visualization up to App.js.
        [ ] Pass nodePositions and relevant setters/handlers down to Visualization.jsx.
    [ ] Button: "Uložit rozmístění" (Save layout):
        [ ] Implement saving nodePositions (and current cgpString for context) to browser's Local Storage.
    [ ] Button: "Načíst rozmístění" (Load layout):
        [ ] Implement loading nodePositions from Local Storage.
    [ ] Button: "Rozmístit automaticky" (Arrange automatically):
        [ ] Implement a "reset to grid" function.
        [ ] (Advanced/Optional) Advanced auto-layout algorithms.

IV. Chromosome & Evolution Management ("Funkce" Tab)
    [ ] Button: "Další kombinace" (Next combination):
        [ ] Define source for "next combinations".
        [ ] Implement logic to update cgpString.
    [X] Functionality: "Detekce zbytečných hradel" (Detection of redundant gates):
        [X] Implicitly done by identifying active vs. inactive nodes. Info available in InformationTab.
    [ ] Functionality: "Eliminace zbytečných hradel" (Elimination of redundant gates):
        [ ] Advanced: Modifying cgpString.

V. Advanced Features & External Interactions
    [ ] Button: "Uložit schema" (Save schema/diagram):
        [ ] Save cgpString or implement SVG to image/SVG export.
    [ ] Simulation & Evaluation (Conceptual):
        [ ] "Přepočítat ohodnocení"
        [ ] "Přiřazení funkcí"
        [ ] "Provést testovací skript"
        [ ] "Zobrazovat hodnoty" (on nodes)
    [ ] Code Generation ("Funkce" Tab):
        [ ] "Vygenerovat VHDL"
        [ ] "Vygenerovat DOT"
    [ ] Application-Specific Functionality ("Funkce" Tab):
        [ ] "Vyfiltrovat obraz 3x3"
    [ ] Evolution Log Visualization:
        [ ] Parse log files, UI for stepping.
    [ ] Real-time Evolution Visualization:
        [ ] WebSockets, dynamic updates.

VI. General Refinements
    [X] Modular Project Structure:
        [X] Separated components into their own files/folders.
        [X] Separated utility functions.
    [X] Error Handling & User Feedback:
        [X] Basic parsing error display is implemented.
    [X] Code Organization:
        [X] Good start.
    [ ] Performance Optimization: (To be addressed as needed)
    [X] Styling:
        [X] Implemented a dark theme and basic layout.





